import {
  HandleError,
  PrismaClientError,
} from '@/lib/utils/error-handling/types'
import { Prisma } from '@prisma/client'

/**
 * @function handlePrismaError
 * @description Handles errors generated by the Prisma Client during database operations.
 * The function distinguishes between known (`PrismaClientKnownRequestError`) and unknown/other Prisma error types
 * to provide either detailed or general information about the issue.
 *
 * @param  error - The Prisma Client error object. This can be any type of error
 * originating from Prisma (e.g., `PrismaClientKnownRequestError`, `PrismaClientUnknownRequestError`, etc.).
 * @returns  - A standardized error object containing `type` (always 'database'),
 * `message` (detailed or generic message), and `details` (Prisma error metadata or its message).
 */
export function handlePrismaError(error: PrismaClientError): HandleError {
  if (error instanceof Prisma.PrismaClientKnownRequestError) {
    return {
      type: 'database',
      message: `${error.message}. Code: ${error.code}.`,
      details: error.meta,
    }
  } else {
    return {
      type: 'database',
      message: 'Database error.',
      details: error.message,
    }
  }
}
